version: '3.8'

# Claude Flutter Firebase Agent with Carenji Integration
# This setup provides a complete development environment for the carenji healthcare app

services:
  claude-carenji-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: claude-carenji-agent
    hostname: claude-carenji
    
    # Mount the carenji project
    volumes:
      # Carenji project directory
      - ${CARENJI_PATH:-../carenji}:/workspace:rw
      
      # Claude configuration from host (optional)
      - ~/.config/claude:/home/claude/.config/claude:ro
      
      # SSH keys for git operations (optional)
      - ~/.ssh:/home/claude/.ssh:ro
      
      # Preserve Flutter pub cache between runs
      - flutter-pub-cache:/home/claude/.pub-cache
      
      # Preserve agent data
      - agent-data:/home/claude/.local/share/claude-flutter-agent
      
    # Environment variables
    environment:
      # Project configuration
      CLAUDE_PROJECT_PATH: /workspace
      CLAUDE_FLUTTER_AGENT_DOCKER: "1"
      
      # Default prompt if not provided
      CLAUDE_PROMPT_TEXT: |
        Help develop the carenji Flutter healthcare app following CLAUDE.md guidelines.
        Focus on clean architecture, comprehensive testing, and Firebase integration.
      
      # Firebase configuration
      CLAUDE_FIREBASE_PROJECT_ID: carenji-24ab8
      CLAUDE_FIREBASE_EMULATORS_ENABLED: "true"
      
      # Flutter MCP settings
      CLAUDE_MCP_ENABLED: "true"
      CLAUDE_MCP_VMSERVICE_PORT: 8182
      CLAUDE_MCP_DDS_PORT: 8181
      
      # Agent behavior
      CLAUDE_WAIT_ON_LIMIT: "true"
      CLAUDE_RESTART_ON_COMPLETE: "true"
      CLAUDE_RESTART_ON_ERROR: "true"
      
      # Skip permission prompts
      CLAUDE_DANGEROUSLY_SKIP_PERMISSIONS: "1"
      
    # Network configuration
    networks:
      - carenji-dev
    
    # Port mappings
    ports:
      # Flutter development
      - "9100:9100"  # Flutter DevTools
      - "8181:8181"  # Flutter DDS
      - "8182:8182"  # Flutter VM Service
      
      # Firebase emulators (if running inside container)
      - "4001:4001"  # Emulator UI
      - "8079:8079"  # Firestore
      - "9098:9098"  # Auth
      - "5001:5001"  # Functions
      
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    
    # Keep container running
    stdin_open: true
    tty: true
    
    # Restart policy
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "pgrep", "-f", "claude-flutter-agent"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Firebase emulators in separate container
  firebase-emulators:
    image: andreysenov/firebase-tools:latest
    container_name: carenji-firebase-emulators
    profiles: ["with-emulators"]  # Only start if explicitly requested
    
    volumes:
      - ${CARENJI_PATH:-../carenji}/firebase.json:/firebase.json:ro
      - ${CARENJI_PATH:-../carenji}/firestore.rules:/firestore.rules:ro
      - ${CARENJI_PATH:-../carenji}/firestore.indexes.json:/firestore.indexes.json:ro
      - ${CARENJI_PATH:-../carenji}/.firebaserc:/.firebaserc:ro
      
    environment:
      FIREBASE_PROJECT: carenji-24ab8
      
    command: >
      firebase emulators:start 
      --only auth,firestore,storage,functions 
      --project carenji-24ab8
      
    networks:
      - carenji-dev
      
    ports:
      - "4000:4000"  # Emulator UI (different port to avoid conflict)
      - "8080:8080"  # Firestore
      - "9099:9099"  # Auth
      - "5002:5001"  # Functions (mapped to different port)
      - "9199:9199"  # Storage
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  carenji-dev:
    name: carenji-dev-network
    driver: bridge

volumes:
  flutter-pub-cache:
    name: claude-carenji-flutter-cache
  agent-data:
    name: claude-carenji-agent-data