#!/usr/bin/env python3
"""Claude Flutter Agent - Full Python launcher with automatic setup."""

import os
import sys
import subprocess
import venv
from pathlib import Path

# Configuration
SCRIPT_DIR = Path(__file__).parent
PROJECT_DIR = SCRIPT_DIR.parent
SRC_DIR = PROJECT_DIR / "src"
VENV_DIR = PROJECT_DIR / ".venv"

# Required packages
REQUIRED_PACKAGES = [
    "typer>=0.15.0",
    "rich>=13.7.0", 
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dateutil>=2.8.0",
    "pytz>=2023.3",
]

def ensure_venv():
    """Ensure virtual environment exists and is activated."""
    if not VENV_DIR.exists():
        print("Creating virtual environment...")
        venv.create(VENV_DIR, with_pip=True)
    
    # Activate venv by modifying sys.path
    if sys.platform == "win32":
        site_packages = VENV_DIR / "Lib" / "site-packages"
        scripts = VENV_DIR / "Scripts"
    else:
        py_version = f"python{sys.version_info.major}.{sys.version_info.minor}"
        site_packages = VENV_DIR / "lib" / py_version / "site-packages"
        scripts = VENV_DIR / "bin"
    
    # Add venv paths
    sys.path.insert(0, str(site_packages))
    sys.path.insert(0, str(SRC_DIR))
    os.environ["PATH"] = f"{scripts}{os.pathsep}{os.environ['PATH']}"
    
    # Use venv's python
    return str(scripts / "python")

def check_dependencies():
    """Check if all dependencies are installed."""
    try:
        import typer
        import rich
        import pydantic
        import pydantic_settings
        import dateutil
        import pytz
        return True
    except ImportError:
        return False

def install_dependencies(python_exe):
    """Install required dependencies."""
    print("Installing dependencies...")
    
    # Upgrade pip first
    subprocess.check_call([python_exe, "-m", "pip", "install", "--upgrade", "pip"], 
                         stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    
    # Install packages
    subprocess.check_call([python_exe, "-m", "pip", "install"] + REQUIRED_PACKAGES)
    print("âœ“ Dependencies installed successfully")

def main():
    """Main entry point."""
    # Ensure venv exists
    python_exe = ensure_venv()
    
    # Check/install dependencies
    if not check_dependencies():
        install_dependencies(python_exe)
    
    # Fix import path for models
    os.environ["PYTHONPATH"] = str(SRC_DIR)
    
    # Import and run the CLI app
    try:
        # Import here after deps are installed
        from claude_code_agent_farm.flutter_agent_cli import app
        
        # Run the app
        app()
        
    except Exception as e:
        print(f"Error: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    # Check Python version
    if sys.version_info < (3, 9):
        print("Error: Python 3.9 or higher is required")
        sys.exit(1)
    
    main()